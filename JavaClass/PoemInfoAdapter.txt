package com.example.yja38.book;

import android.content.Context;
import android.graphics.Typeface;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.RatingBar;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.toolbox.Volley;

import org.json.JSONObject;

import java.util.List;

/**
 * Created by SH on 2017-10-31.
 */

public class PoemInfoAdapter extends BaseAdapter {

    private Context context;
    private List<PoemInfo> poemInfoList;

    public PoemInfoAdapter(Context context,List<PoemInfo> PoemInfoList)
    {
        this.context = context;
        this.poemInfoList= PoemInfoList;

    }

    @Override
    public int getCount() {
        return poemInfoList.size();
    }

    @Override
    public Object getItem(int i) {
        return poemInfoList.get(i);
    }

    @Override
    public long getItemId(int i) {
        return i;
    }

    @Override
    public View getView(int i, View view, ViewGroup viewGroup) {//각각의 id값들에 대해 특정 변수를 지정한 후 그 변수에 가져온 데이터를 집어넣는다. 그렇게 뷰를 세팅마무리한다.

        View v=View.inflate(context,R.layout.poem,null);
        final TextView Poem_No=(TextView) v.findViewById(R.id.Poem_No);
        TextView Poem_Name=(TextView) v.findViewById(R.id.Poem_Name);
        TextView Poem_Writer=(TextView) v.findViewById(R.id.Poem_Writer);
        TextView Poem_Grade_avg=(TextView) v.findViewById(R.id.Poem_Grade_avg);
        final TextView Poem_Content=(TextView) v.findViewById(R.id.Poem_Content);

        Poem_No.setText(poemInfoList.get(i).getPoem_no());
        Poem_Name.setText(poemInfoList.get(i).getPoem_name());
        Poem_Writer.setText(poemInfoList.get(i).getPoem_writer());
        Poem_Grade_avg.setText(poemInfoList.get(i).getPoem_grade_avg());
        Poem_Content.setText(poemInfoList.get(i).getPoem_content());

        v.setTag(poemInfoList.get(i).getPoem_no());//리스트의 식별자는 무엇인지 하는방법.

        Spinner spinner = (Spinner)v.findViewById(R.id.fontsize);

        SpinnerAdapter sAdapter = ArrayAdapter.createFromResource(context,R.array.fontsize, android.R.layout.simple_spinner_dropdown_item);
        spinner.setAdapter(sAdapter);
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if(position==0)
                {
                    Poem_Content.setTextSize(15);
                }

                if(position==1)
                {
                    Poem_Content.setTextSize(20);
                }

                if(position==2)
                {
                    Poem_Content.setTextSize(25);
                }

            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }


        });

        Spinner spinner2 = (Spinner)v.findViewById(R.id.fontstyle);


        SpinnerAdapter sAdapter2 = ArrayAdapter.createFromResource(context,R.array.fontstyle, android.R.layout.simple_spinner_dropdown_item);
        spinner2.setAdapter(sAdapter2);
        spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if(position==0)
                {
                    Poem_Content.setTypeface(Typeface.DEFAULT);
                }

                if(position==1)
                {
                    Poem_Content.setTypeface(Typeface.createFromAsset(Poem_Content.getContext().getAssets(), "fonts/BMJUA.ttf"));
                }

                if(position==2)
                {
                    Poem_Content.setTypeface(Typeface.createFromAsset(Poem_Content.getContext().getAssets(), "fonts/BMDOHYEON.ttf"));
                }

            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }


        });

        final RatingBar ratingBar=(RatingBar)v.findViewById(R.id.Poemratingbar);
        final TextView textView= (TextView)v.findViewById(R.id.Poemratetext);

        ratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() {
            @Override
            public void onRatingChanged(RatingBar ratingBar, float rating,
                                        boolean fromUser) {
                // TODO Auto-generated method stub
                textView.setText("평점 하려는 점수 : " + rating);

            }

        });
        Button button=(Button)v.findViewById(R.id.Poemratingbutton);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                String Member_nickname=LoginActivity.Login_nickname;
                String Poem_no=Poem_No.getText().toString();
                String Poem_grade=Float.toString(ratingBar.getRating());

                Response.Listener<String> responseListener = new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        try{
                            JSONObject jsonResponse=new JSONObject(response);
                            boolean success = jsonResponse.getBoolean("success");
                            if(success) {
                                Toast toast1 = Toast.makeText(context, "글을 평점하였습니다.", Toast.LENGTH_LONG);
                                toast1.setGravity(Gravity.BOTTOM, 0, 0);
                                toast1.show();
                            }
                            else
                            {

                                Toast toast2 = Toast.makeText(context, "글에 대한 평점을 수정하였습니다.", Toast.LENGTH_LONG);
                                toast2.setGravity(Gravity.BOTTOM, 0, 0);
                                toast2.show();

                            }


                        }


                        catch (Exception e)
                        {
                            e.printStackTrace();

                        }


                    }
                };

                PoemRatingRequest poemRatingRequest= new PoemRatingRequest(Member_nickname,Poem_no,Poem_grade,responseListener);//맴버값을 넣은후 response답을 받아결과를 도출한다.
                RequestQueue queue= Volley.newRequestQueue(context);
                queue.add(poemRatingRequest);


            }
        });

        return v;
    }
}
