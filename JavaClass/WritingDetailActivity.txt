package com.example.yja38.book;

import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Gravity;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.toolbox.Volley;
import com.facebook.CallbackManager;
import com.facebook.FacebookSdk;
import com.facebook.appevents.AppEventsLogger;
import com.facebook.share.model.ShareLinkContent;
import com.facebook.share.model.ShareOpenGraphObject;
import com.facebook.share.widget.ShareButton;
import com.facebook.share.widget.ShareDialog;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;

public class WritingDetailActivity extends AppCompatActivity {

    private TextView Board_Detail_No;
    private TextView Board_Detail_Name;
    private TextView Board_Detail_Writer_Nickname;
    private TextView Board_Detail_Date;
    private TextView Board_Detail_Recommend_Count;
    private TextView Board_Detail_Content;
    private ImageView Board_Detail_Recommend_Button;
    private TextView Board_Detail_Recommend_Count2;

    @Override
    public void onBackPressed() {
        new BackgroundTask().execute();
    }

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_home:
                    Intent intent = new Intent(getApplicationContext(), MainActivity.class);
                    startActivity(intent);
                    return true;
                case R.id.navigation_writing:
                    new BackgroundTask().execute();
                    return true;
                case R.id.navigation_reading:
                    Intent intent3 = new Intent(getApplicationContext(), SelectReadingActivity.class);
                    startActivity(intent3);
                    return true;
            }
            return false;
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_writing_detail);

        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);



        CallbackManager callbackManager = CallbackManager.Factory.create(); //콜백메소드 생성
        final ShareDialog shareDialog = new ShareDialog(this); //공유를 위한 다이얼로그 박스

        Button btnFacebook = (Button) findViewById(R.id.btnFacebook);
        btnFacebook.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ShareDialog.canShow(ShareLinkContent.class)) {
                    ShareLinkContent linkContent=new ShareLinkContent.Builder()
                            .setContentUrl(Uri.parse("http://yja3806.dothome.co.kr/"))

                            .build();
                    shareDialog.show(linkContent);
                }
            }
        });

        Board_Detail_No=(TextView) findViewById(R.id.Board_Detail_No);
        Board_Detail_Name=(TextView) findViewById(R.id.Board_Detail_Name);
        Board_Detail_Writer_Nickname=(TextView) findViewById(R.id.Board_Detail_Writer_Nickname);
        Board_Detail_Date=(TextView) findViewById(R.id.Board_Detail_Date);
        Board_Detail_Recommend_Count=(TextView) findViewById(R.id.Board_Detail_Recommend_Count);
        Board_Detail_Content=(TextView) findViewById(R.id.Board_Detail_Content);
        Board_Detail_Recommend_Button=(ImageView) findViewById(R.id.Board_Detail_Recommend_Button);
        Board_Detail_Recommend_Count2=(TextView) findViewById(R.id.Board_Detail_Recommend_Count2);

        Intent intent = getIntent();

        BoardInfo boardInfo = (BoardInfo) intent.getSerializableExtra("boardInfo");
        int exist = intent.getIntExtra("Exist",0);

        Board_Detail_No.setText(boardInfo.getBoard_no());
        Board_Detail_Name.setText(boardInfo.getBoard_name());
        Board_Detail_Writer_Nickname.setText(boardInfo.getBoard_writer_nickname());
        Board_Detail_Date.setText(boardInfo.getBoard_date());
        Board_Detail_Recommend_Count.setText(boardInfo.getBoard_recommend_count());
        Board_Detail_Content.setText(boardInfo.getBoard_content());
        Board_Detail_Recommend_Count2.setText(boardInfo.getBoard_recommend_count());



        if(exist==1)
        {
            Drawable drawable = getResources().getDrawable(R.drawable.heart);
            Board_Detail_Recommend_Button.setImageDrawable(drawable);
        }
        else
        {
            Drawable drawable = getResources().getDrawable(R.drawable.noheart);
            Board_Detail_Recommend_Button.setImageDrawable(drawable);
        }

        Board_Detail_Recommend_Button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//클릭하면 동작시킴.

                String Member_nickname=LoginActivity.Login_nickname;
                String Board_detail_no=Board_Detail_No.getText().toString();

                Response.Listener<String> responseListener = new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        try{
                            JSONObject jsonResponse=new JSONObject(response);
                            boolean success = jsonResponse.getBoolean("success");
                            if(success)
                            {
                                Drawable drawable = getResources().getDrawable(R.drawable.heart);
                                Board_Detail_Recommend_Button.setImageDrawable(drawable);
                                Toast toast2 = Toast.makeText(WritingDetailActivity.this, "좋아요를 하셨습니다.", Toast.LENGTH_LONG);
                                toast2.setGravity(Gravity.BOTTOM, 0, 0);
                                toast2.show();
                                int counting=Integer.valueOf(Board_Detail_Recommend_Count.getText().toString());
                                int counting2=Integer.valueOf(Board_Detail_Recommend_Count2.getText().toString());
                                counting=counting+1;
                                counting2=counting2+1;
                                String Scounting= Integer.toString(counting);
                                String Scounting2= Integer.toString(counting2);


                                Board_Detail_Recommend_Count.setText(Scounting);
                                Board_Detail_Recommend_Count2.setText(Scounting2);

                            }
                            else
                            {
                                Drawable drawable = getResources().getDrawable(R.drawable.noheart);
                                Board_Detail_Recommend_Button.setImageDrawable(drawable);
                                Toast toast2 = Toast.makeText(WritingDetailActivity.this, "좋아요를 해제하셨습니다.", Toast.LENGTH_LONG);
                                toast2.setGravity(Gravity.BOTTOM, 0, 0);
                                toast2.show();
                                int counting=Integer.valueOf(Board_Detail_Recommend_Count.getText().toString());
                                int counting2=Integer.valueOf(Board_Detail_Recommend_Count2.getText().toString());
                                counting=counting-1;
                                counting2=counting2-1;
                                String Scounting= Integer.toString(counting);
                                String Scounting2= Integer.toString(counting2);


                                Board_Detail_Recommend_Count.setText(Scounting);
                                Board_Detail_Recommend_Count2.setText(Scounting2);
                            }


                        }


                        catch (Exception e)
                        {
                            e.printStackTrace();

                        }


                    }
                };

                InsertHeartRequest insertHeartRequest= new InsertHeartRequest(Member_nickname,Board_detail_no,responseListener);//맴버값을 넣은후 response답을 받아결과를 도출한다.
                RequestQueue queue= Volley.newRequestQueue(WritingDetailActivity.this);
                queue.add(insertHeartRequest);



            }
        });
    }
    class BackgroundTask extends AsyncTask<Void, Void, String> {
        String target;

        @Override
        protected void onPreExecute() {
            target = "http://yja3806.dothome.co.kr/GetBoard_all.php";

        }//php에 접속할 변수

        @Override
        protected String doInBackground(Void... voids) {
            try {
                URL url = new URL(target);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                InputStream inputStream = httpURLConnection.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));//접속구문
                String temp;
                StringBuilder stringBuilder = new StringBuilder();

                while ((temp = bufferedReader.readLine()) != null)//temp에 읽은 데이터를 넣는다. null이 아닐때까지.
                {
                    stringBuilder.append(temp + "\n");//temp를 string빌더에 넣는다.

                }
                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();
                return stringBuilder.toString().trim();//받은 stringbuilder값 리턴


            } catch (Exception e)//예외처리
            {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        public void onProgressUpdate(Void... values) {
            super.onProgressUpdate(values);
        }

        @Override
        public void onPostExecute(String result) {
            Intent intent = new Intent(getApplicationContext(), SelectWritingActivity.class);//화면전환
            intent.putExtra("boardInfoList", result);//결과 값을 다음화면인 readingactivity에서 storyInfoList를 찾아 맵핑시켜 넣는다.
            getApplicationContext().startActivity(intent);//현재 화면 실행

        }
    }
}
