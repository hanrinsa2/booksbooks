package com.example.yja38.book;

import android.content.Intent;
import android.os.AsyncTask;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;


public class SelectReadingActivity extends AppCompatActivity {


    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_home:
                    Intent intent = new Intent(getApplicationContext(), MainActivity.class);
                    startActivity(intent);
                    return true;
                case R.id.navigation_writing:
                    new BackgroundTask().execute();
                    return true;
                case R.id.navigation_reading:
                    Intent intent3 = new Intent(getApplicationContext(), SelectReadingActivity.class);
                    startActivity(intent3);
                    return true;
            }
            return false;
        }
    };




    private static int rand;
    public static boolean wholecheck;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_select_reading);

        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);

        Button SelectStoryButton = (Button) findViewById(R.id.Story);//버튼생성.
        SelectStoryButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//클릭하면 동작시킴.
                wholecheck=false;
                new BackgroundTask1().execute();//아래 클래스 실행
            }
        });

        Button SelectPoemButton =(Button) findViewById(R.id.Poem);//버튼생성.
        SelectPoemButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//클릭하면 동작시킴.
                wholecheck=false;
                new BackgroundTask2().execute();//아래 클래스 실행
            }
        });

        Button SelectEssayButton =(Button) findViewById(R.id.Essay);//버튼생성.
        SelectEssayButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//클릭하면 동작시킴.
                wholecheck=false;
                new BackgroundTask3().execute();//아래 클래스 실행
            }
        });

        Button SelectWholeButton =(Button) findViewById(R.id.Whole);//버튼생성.
        SelectWholeButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//클릭하면 동작시킴.
                wholecheck=true;
                rand=1+(int)(Math.random()*3);
                switch(rand)
                {
                    case 1:
                        new BackgroundTask1().execute();//아래 클래스 실행
                        break;
                    case 2:
                        new BackgroundTask2().execute();//아래 클래스 실행
                        break;
                    case 3:
                        new BackgroundTask3().execute();//아래 클래스 실행
                        break;
                }

            }
        });


    }


    class BackgroundTask extends AsyncTask<Void, Void, String> {
        String target;

        @Override
        protected void onPreExecute() {
            target = "http://yja3806.dothome.co.kr/GetBoard_all.php";

        }//php에 접속할 변수

        @Override
        protected String doInBackground(Void... voids) {
            try {
                URL url = new URL(target);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                InputStream inputStream = httpURLConnection.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));//접속구문
                String temp;
                StringBuilder stringBuilder = new StringBuilder();

                while ((temp = bufferedReader.readLine()) != null)//temp에 읽은 데이터를 넣는다. null이 아닐때까지.
                {
                    stringBuilder.append(temp + "\n");//temp를 string빌더에 넣는다.

                }
                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();
                return stringBuilder.toString().trim();//받은 stringbuilder값 리턴


            } catch (Exception e)//예외처리
            {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        public void onProgressUpdate(Void... values) {
            super.onProgressUpdate(values);
        }

        @Override
        public void onPostExecute(String result) {
            Intent intent = new Intent(getApplicationContext(), SelectWritingActivity.class);//화면전환
            intent.putExtra("boardInfoList", result);//결과 값을 다음화면인 readingactivity에서 storyInfoList를 찾아 맵핑시켜 넣는다.
            getApplicationContext().startActivity(intent);//현재 화면 실행

        }
    }





    class BackgroundTask1 extends AsyncTask<Void, Void, String> {
        String target;

        @Override
        protected void onPreExecute() {
            target = "http://yja3806.dothome.co.kr/GetStory.php";
        }//php에 접속할 변수

        @Override
        protected String doInBackground(Void... voids) {
            try {
                URL url = new URL(target);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                InputStream inputStream = httpURLConnection.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));//접속구문
                String temp;
                StringBuilder stringBuilder = new StringBuilder();

                while ((temp = bufferedReader.readLine()) != null)//temp에 읽은 데이터를 넣는다. null이 아닐때까지.
                {
                    stringBuilder.append(temp + "\n");//temp를 string빌더에 넣는다.

                }
                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();
                return stringBuilder.toString().trim();//받은 stringbuilder값 리턴


            } catch (Exception e)//예외처리
            {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        public void onProgressUpdate(Void... values) {
            super.onProgressUpdate(values);
        }

        @Override
        public void onPostExecute(String result) {
            Intent intent = new Intent(SelectReadingActivity.this, ReadingStoryActivity.class);//화면전환
            intent.putExtra("storyInfoList", result);//결과 값을 다음화면인 readingactivity에서 storyInfoList를 찾아 맵핑시켜 넣는다.
            SelectReadingActivity.this.startActivity(intent);//현재 화면 실행

        }
    }

    class BackgroundTask2 extends AsyncTask<Void, Void, String>
    {
        String target;

        @Override
        protected void onPreExecute(){
            target="http://yja3806.dothome.co.kr/GetPoem.php";
        }//php에 접속할 변수

        @Override
        protected String doInBackground(Void... voids){
            try{
                URL url=new URL(target);
                HttpURLConnection httpURLConnection=(HttpURLConnection) url.openConnection();
                InputStream inputStream=httpURLConnection.getInputStream();
                BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(inputStream));//접속구문
                String temp;
                StringBuilder stringBuilder=new StringBuilder();

                while((temp=bufferedReader.readLine())!=null)//temp에 읽은 데이터를 넣는다. null이 아닐때까지.
                {
                    stringBuilder.append(temp+"\n");//temp를 string빌더에 넣는다.

                }
                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();
                return stringBuilder.toString().trim();//받은 stringbuilder값 리턴


            }
            catch(Exception e)//예외처리
            {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        public void onProgressUpdate(Void... values)
        {
            super.onProgressUpdate(values);
        }

        @Override
        public void onPostExecute(String result){
            Intent intent=new Intent(SelectReadingActivity.this,ReadingPoemActivity.class);//화면전환
            intent.putExtra("poemInfoList",result);//결과 값을 다음화면인 readingactivity에서 storyInfoList를 찾아 맵핑시켜 넣는다.
            SelectReadingActivity.this.startActivity(intent);//현재 화면 실행

        }
    }

    class BackgroundTask3 extends AsyncTask<Void, Void, String> {
        String target;

        @Override
        protected void onPreExecute() {
            target = "http://yja3806.dothome.co.kr/GetEssay.php";
        }//php에 접속할 변수

        @Override
        protected String doInBackground(Void... voids) {
            try {
                URL url = new URL(target);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                InputStream inputStream = httpURLConnection.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));//접속구문
                String temp;
                StringBuilder stringBuilder = new StringBuilder();

                while ((temp = bufferedReader.readLine()) != null)//temp에 읽은 데이터를 넣는다. null이 아닐때까지.
                {
                    stringBuilder.append(temp + "\n");//temp를 string빌더에 넣는다.

                }
                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();
                return stringBuilder.toString().trim();//받은 stringbuilder값 리턴


            } catch (Exception e)//예외처리
            {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        public void onProgressUpdate(Void... values) {
            super.onProgressUpdate(values);
        }

        @Override
        public void onPostExecute(String result) {
            Intent intent = new Intent(SelectReadingActivity.this, ReadingEssayActivity.class);//화면전환
            intent.putExtra("essayInfoList", result);//결과 값을 다음화면인 readingactivity에서 storyInfoList를 찾아 맵핑시켜 넣는다.
            SelectReadingActivity.this.startActivity(intent);//현재 화면 실행

        }
    }


}
